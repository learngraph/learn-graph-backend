services:
  backend:
    build: ./wgo/
    command: ["wgo", "run", "-file=.go", "-xfile=_test.go", "main.go"]
    working_dir: /src
    ports:
      - "8124:8080" # host:container
    networks:
      - learngraphnet
    environment:
      DB_ARANGO_HOST: "http://arangodb:8529"
      DB_ARANGO_JWT_SECRET_PATH: "/secrets/jwtSecret"
      DB_POSTGRES_HOST: "postgres"
      PRODUCTION: "false"
    volumes:
      - ../:/src
      - ../docker-data/_go-dev-cache/build:/root/.cache/go-build
      - ../docker-data/_go-dev-cache/mod:/go/pkg/mod
      - ../docker-data/arangodb_secrets:/secrets
    depends_on:
      - arangodb
  postgres:
    image: postgres:16.1
    networks:
      - learngraphnet
    environment:
      POSTGRES_USER: learngraph
      POSTGRES_PASSWORD: example
    volumes:
      - ../docker-data/postgres_data:/var/lib/postgresql/data
  postgresadminer:
    image: adminer
    ports:
      - 8888:8080
  arangodb:
    image: arangodb:latest
    environment:
      ARANGO_RANDOM_ROOT_PASSWORD: 1
    ports:
      - 8529:8529
    volumes:
      - ../docker-data/arangodb_data_container:/var/lib/arangodb3
      - ../docker-data/arangodb_apps_data_container:/var/lib/arangodb3-apps
      - ../docker-data/arangodb_secrets:/secrets
    depends_on:
      - arangodb_setup
    command: ["arangod", "--server.jwt-secret-keyfile", "/secrets/jwtSecret"]
    networks:
      - learngraphnet
  arangodb_setup:
    image: arangodb:latest
    restart: "no"
    volumes:
      - ../docker-data/arangodb_secrets:/secrets
    command: ["arangodb", "create", "jwt-secret", "--secret=/secrets/jwtSecret"]
networks:
  learngraphnet:
    name: learngraphnet
    external: true
