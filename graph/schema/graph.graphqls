# currently unused (always null)
type Status {
  Message: String!
}

input Text {
  translations: [Translation!]!
}

input Translation {
  language: String!
  content: String!
}

type CreateEntityResult {
  ID: ID!
  Status: Status
}

type Vector {
  x: Float!
  y: Float!
  z: Float! # is optional in case of 2D grid, but for convenience it's just zero
}

type Node {
  id: ID!
  description: String!
  resources: String
  position: Vector
}

type Edge {
  id: ID!
  from: ID! # node id
  to: ID! # node id
  weight: Float!
}

type Graph {
  nodes: [Node!]
  edges: [Edge!]
}

enum NodeEditType {
  create
  edit
}

enum EdgeEditType {
  create
  edit
}

scalar Time

type NodeEdit {
  username: String!
  type: NodeEditType!
  newDescription: String!
  newResources: String
  updatedAt: Time!
}

type EdgeEdit {
  username: String!
  type: EdgeEditType!
  updatedAt: Time!
  weight: Float!
}
