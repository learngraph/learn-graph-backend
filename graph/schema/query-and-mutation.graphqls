type Query {
  # graph data
  graph: Graph
  resources(nodeID: ID!): Node
  nodeEdits(nodeID: ID!): [NodeEdit!]!
  edgeEdits(edgeID: ID!): [EdgeEdit!]!
}

type Mutation {
  # graph editing
  createNode(description: Text!, resources: Text): CreateEntityResult
  createEdge(from: ID!, to: ID!, weight: Float!): CreateEntityResult
  editNode(id: ID!, description: Text!, resources: Text): Status
  submitVote(id: ID!, value: Float!): Status
  deleteNode(id: ID!): Status
  deleteEdge(id: ID!): Status

  # user management
  createUserWithEMail(
    username: String!
    password: String!
    email: String!
  ): CreateUserResult
  login(authentication: LoginAuthentication!): LoginResult
  logout: Status
  changePassword(oldPassword: String!, newPassword: String!): Status
  resetForgottenPasswordToEMail(email: String): Status
  deleteAccount: Status
}
