type Query {
  # graph data
  graph: Graph

  # user management
  login(authentication: LoginAuthentication!): LoginResult
  logout: Status
}

type Mutation {
  # graph editing
  submitVote(id: ID!, value: Float!): Status
  createNode(description: Text!): CreateEntityResult
  createEdge(from: ID!, to: ID!, weight: Float!): CreateEntityResult
  editNode(id: ID!, description: Text!): Status

  # user management
  createUserWithEMail(user: String!, password: String!, email: String!): CreateUserResult
  changePassword(user: String!, oldPassword: String!, newPassword: String!): Status
  resetForgottenPasswordToEMail(user: String, email: String): Status
  # TODO(skep): remove username in deleteAccount(), use header with userID (db:key) instead
  deleteAccount(user: String!): Status
}
